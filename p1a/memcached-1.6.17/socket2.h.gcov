        -:    0:Source:/usr/include/x86_64-linux-gnu/bits/socket2.h
        -:    0:Graph:memcached.gcno
        -:    0:Data:memcached.gcda
        -:    0:Runs:382
        -:    1:/* Checking macros for socket functions.
        -:    2:   Copyright (C) 2005-2022 Free Software Foundation, Inc.
        -:    3:   This file is part of the GNU C Library.
        -:    4:
        -:    5:   The GNU C Library is free software; you can redistribute it and/or
        -:    6:   modify it under the terms of the GNU Lesser General Public
        -:    7:   License as published by the Free Software Foundation; either
        -:    8:   version 2.1 of the License, or (at your option) any later version.
        -:    9:
        -:   10:   The GNU C Library is distributed in the hope that it will be useful,
        -:   11:   but WITHOUT ANY WARRANTY; without even the implied warranty of
        -:   12:   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
        -:   13:   Lesser General Public License for more details.
        -:   14:
        -:   15:   You should have received a copy of the GNU Lesser General Public
        -:   16:   License along with the GNU C Library; if not, see
        -:   17:   <https://www.gnu.org/licenses/>.  */
        -:   18:
        -:   19:#ifndef _SYS_SOCKET_H
        -:   20:# error "Never include <bits/socket2.h> directly; use <sys/socket.h> instead."
        -:   21:#endif
        -:   22:
        -:   23:extern ssize_t __recv_chk (int __fd, void *__buf, size_t __n, size_t __buflen,
        -:   24:			   int __flags);
        -:   25:extern ssize_t __REDIRECT (__recv_alias, (int __fd, void *__buf, size_t __n,
        -:   26:					  int __flags), recv);
        -:   27:extern ssize_t __REDIRECT (__recv_chk_warn,
        -:   28:			   (int __fd, void *__buf, size_t __n, size_t __buflen,
        -:   29:			    int __flags), __recv_chk)
        -:   30:     __warnattr ("recv called with bigger length than size of destination "
        -:   31:		 "buffer");
        -:   32:
        -:   33:__fortify_function ssize_t
        -:   34:recv (int __fd, void *__buf, size_t __n, int __flags)
        -:   35:{
        -:   36:  size_t sz = __glibc_objsize0 (__buf);
        -:   37:  if (__glibc_safe_or_unknown_len (__n, sizeof (char), sz))
        -:   38:    return __recv_alias (__fd, __buf, __n, __flags);
        -:   39:  if (__glibc_unsafe_len (__n, sizeof (char), sz))
        -:   40:    return __recv_chk_warn (__fd, __buf, __n, sz, __flags);
        -:   41:  return __recv_chk (__fd, __buf, __n, sz, __flags);
        -:   42:}
        -:   43:
        -:   44:extern ssize_t __recvfrom_chk (int __fd, void *__restrict __buf, size_t __n,
        -:   45:			       size_t __buflen, int __flags,
        -:   46:			       __SOCKADDR_ARG __addr,
        -:   47:			       socklen_t *__restrict __addr_len);
        -:   48:extern ssize_t __REDIRECT (__recvfrom_alias,
        -:   49:			   (int __fd, void *__restrict __buf, size_t __n,
        -:   50:			    int __flags, __SOCKADDR_ARG __addr,
        -:   51:			    socklen_t *__restrict __addr_len), recvfrom);
        -:   52:extern ssize_t __REDIRECT (__recvfrom_chk_warn,
        -:   53:			   (int __fd, void *__restrict __buf, size_t __n,
        -:   54:			    size_t __buflen, int __flags,
        -:   55:			    __SOCKADDR_ARG __addr,
        -:   56:			    socklen_t *__restrict __addr_len), __recvfrom_chk)
        -:   57:     __warnattr ("recvfrom called with bigger length than size of "
        -:   58:		 "destination buffer");
        -:   59:
        -:   60:__fortify_function ssize_t
       28:   61:recvfrom (int __fd, void *__restrict __buf, size_t __n, int __flags,
        -:   62:	  __SOCKADDR_ARG __addr, socklen_t *__restrict __addr_len)
        -:   63:{
       28:   64:  size_t sz = __glibc_objsize0 (__buf);
       28:   65:  if (__glibc_safe_or_unknown_len (__n, sizeof (char), sz))
       28:   66:    return __recvfrom_alias (__fd, __buf, __n, __flags, __addr, __addr_len);
    #####:   67:  if (__glibc_unsafe_len (__n, sizeof (char), sz))
    #####:   68:    return __recvfrom_chk_warn (__fd, __buf, __n, sz, __flags, __addr,
        -:   69:				__addr_len);
    #####:   70:  return __recvfrom_chk (__fd, __buf, __n, sz, __flags, __addr, __addr_len);
        -:   71:}
